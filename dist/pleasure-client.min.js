/*!
 * pleasure-client v1.0.0-beta
 * (c) 2018-2019 Martin Rafael Gonzalez <tin@devtin.io>
 * Released under the MIT License.
 */
var pleasureClient=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){'use strict';function q(a={}){let d={};return process.env.$pleasure&&process.env.$pleasure.pleasureClient&&(d=process.env.$pleasure.pleasureClient),process.env.$pleasure&&process.env.$pleasure&&(a=c.all([{},process.env.$pleasure,a])),c.all([{baseURL:"http://localhost:3000/api",entitiesUri:"/entities",authEndpoint:"/token",revokeEndpoint:"/revoke",timeout:15e3},d,b(a.api||{},["entitiesUri","authEndpoint"])])}function r({baseURL:a=t.baseURL,timeout:b=t.timeout}={}){const c=d.create({timeout:b,baseURL:a,paramsSerializer(a){return e.stringify(a,{arrayFormat:"brackets"})},headers:{"X-Client":"pleasure"}});return c.interceptors.response.use(a=>{const{data:{statusCode:b,data:c,error:d,message:e}}=a||{};if(200===b)return c;throw new s(d,e,b,c)},a=>{const{errors:b,error:c}=f(a,"response.data",{});throw process.env.API_ERROR&&console.log(`[api:${a.config.method}(${a.response.status}/${a.response.statusText}) => ${a.config.url}] ${JSON.stringify(a.response.data)}`),new Error(c||"Unknown error")}),c}b=b&&b.hasOwnProperty("default")?b["default"]:b,c=c&&c.hasOwnProperty("default")?c["default"]:c,d=d&&d.hasOwnProperty("default")?d["default"]:d,e=e&&e.hasOwnProperty("default")?e["default"]:e,f=f&&f.hasOwnProperty("default")?f["default"]:f,g=g&&g.hasOwnProperty("default")?g["default"]:g,h=h&&h.hasOwnProperty("default")?h["default"]:h,i=i&&i.hasOwnProperty("default")?i["default"]:i,j=j&&j.hasOwnProperty("default")?j["default"]:j,k=k&&k.hasOwnProperty("default")?k["default"]:k,l=l&&l.hasOwnProperty("default")?l["default"]:l,m=m&&m.hasOwnProperty("default")?m["default"]:m,o=o&&o.hasOwnProperty("default")?o["default"]:o,p=p&&p.hasOwnProperty("default")?p["default"]:p;class s extends Error{constructor(a,b,c=500,d){super(a),this.message=b,this.code=c,this.data=d}}let t=q();var u=r();let v,w=q();class x extends n.EventEmitter{constructor(a){super();const{protocol:b,host:c,pathname:d}=p.parse(a);this._token=null,this._isConnected=!1,this._host=`${b}//${c}`,this._path=`${d}-socket`,this._socket=null,this._binds={error:this._error.bind(this),connect:this._connect.bind(this),disconnect:this._disconnect.bind(this),create:this._proxySocket.bind(this,"create"),update:this._proxySocket.bind(this,"update"),delete:this._proxySocket.bind(this,"delete"),"*":(a,b)=>{this.emit(a,b)}},this.connect()}connect(){if(!process.server){const a=Object.assign({forceNew:!0,path:this._path},this.token?{transportOptions:{polling:{extraHeaders:{Authorization:`Bearer ${this.token}`}}}}:{});this._socket&&(this._unwireSocket(),this._socket.disconnect()),this._socket=o(this._host,a),this._socket.onevent=x._onEvent(this._socket.onevent),this._wireSocket()}}static _onEvent(a){return function(b){const c=b.data||[];a.call(this,b),b.data=["*"].concat(c),a.call(this,b)}}static queryParamEncode(a){return j(a,a=>Array.isArray(a)?a:a instanceof RegExp?{$regex:a.source,$options:a.flags}:"object"==typeof a?y.queryParamEncode(a):a)}_wiring(a,b=!0,c){a.forEach(a=>{this._socket[b?"on":"off"](a,c||this._binds[a])})}_unwireSocket(){this._wiring(Object.keys(this._binds),!1)}_wireSocket(){this._wiring(Object.keys(this._binds))}_proxySocket(a,b){this.emit(a,b)}_error(...a){this.emit("error",...a)}_connect(){this._isConnected=!0,this.emit("connect")}_disconnect(a){this._isConnected=!1,this.emit("disconnect")}get token(){return this._token}set token(a){return this._token=a,this.connect(),a}}class y extends x{constructor({accessToken:a,refreshToken:b,driver:c=r(),config:d=w}={}){const{baseURL:e}=c.defaults;super(e),this._driver=c,this._accessToken=a,this._refreshToken=b,this._userProfile=null,this._cache=[],console.log({config:d}),this.config=d;const f=a=>{const b={};return(c,...d)=>{const e=k({name:c,args:d});return b[e]?b[e]:b[e]=a(c,...d)}},j=f(a=>{const b={get(b,c){return c in b?b[c].bind(b,a):"toJSON"===c?void 0:b.controller.bind(b,a,h(c))}};return new Proxy(this,b)}),l=f((a,b)=>{function c(c,{entity:d,entry:e}){a!==d||g(e).forEach(a=>{a._id===b&&c(a)})}function d(a){let b;return i(e,({cb:c,bind:d})=>{if(c===a)return b=d,!1}),b||(b=c.bind(null,a),e.push({cb:a,bind:b})),b}const e=[],f={get(c,e){return /^(on|off|once|emit)$/.test(e)?(a,b)=>{c[e](a,d(b))}:e in c?c[e].bind(c,a,b):void 0},apply(){}};return new Proxy(this,f)}),m={get(a,b){const c=b;return"string"!=typeof c||c in a?a[b]:new Proxy(()=>{},{get(a,b){return j(c)[b]},apply:function(a,b,d){return l(c,...d)}})}};return new Proxy(this,m)}async proxyCacheReq({id:a,req:b}){let c;return await l.each(this._cache,async d=>{if(c=await d.req({id:a,req:b}),"undefined"!=typeof c)return!1}),c}async proxyCacheRes({id:a,req:b,res:c}){return await l.each(this._cache,async d=>{await d.res({id:a,req:b,res:c})}),c}async driver(a={}){const b=k(a),c=await this.proxyCacheReq({id:b,req:a});if("undefined"!=typeof c)return c;const d=await this._driver(a);return this.proxyCacheRes({id:b,req:a,res:d}).catch(a=>{console.log(`Proxy cache res error:`,a)}),d}cache(a){this._cache.push(a)}_localLogout(){this.emit("logout",this.userProfile),this._accessToken=null,this._refreshToken=null,this._userProfile=null,this._refreshCredentials()}_refreshCredentials(){return this.token=this._accessToken,this._accessToken?void(this.emit("login",this.userProfile),this._driver.defaults.headers.common.Authorization=`Bearer ${this._accessToken}`):void delete this._driver.defaults.headers.common.Authorization}get userProfile(){return this._userProfile}getSessionProfile(){return this._accessToken?m(this._accessToken):null}async login(a,b={}){this._localLogout();const{accessToken:c,refreshToken:d}=await this.driver({url:`${this.config.authEndpoint}`,method:"post",data:a,params:b});return this._accessToken=c,this._refreshToken=d,this._userProfile=m(c),this._refreshCredentials(),{accessToken:c,refreshToken:d}}async logout(){return await this._driver({url:`${this.config.revokeEndpoint}`,method:"post"}),this._localLogout()}create(a,b,c={}){if(!a||!b)throw new Error(`Provide both entity and entry`);return this.driver({url:`/${a}`,data:b,method:"post",params:c})}getEntities(){return this.driver({url:this.config.entitiesUri})}read(a,b,c,d={}){if(!a||!b)throw new Error(`Provide both entity and id`);const e=[a,b,c].filter(a=>!!a).join("/");return this.driver({url:`/${e}`,params:d})}update(a,b,c,d){if(!a||!b)throw new Error(`Provide both entity and id`);return this.driver({url:`/${a}/${b}`,method:"patch",data:c,params:d})}list(a,b={},c={}){if(!a)throw new Error(`Provide an entity`);return this.driver({url:`/${a}`,params:Object.assign({},c,b)})}delete(a,b,c={}){let d=`/${a}`;return"object"==typeof b&&(Object.assign(c,{id:Array.isArray(b)?g(b):b}),b=null),b&&(d+=`/${b}`),this.driver({url:d,method:"delete",params:y.queryParamEncode(c)})}push(a,b,c,d,e=!1,f={}){if(!a||!b||!c||!d)throw Error(`Provide all 'entity', 'id', 'fieldPath' and 'newEntry'.`);return this.driver({url:`${a}/${b}/${c}`,method:"post",data:{push:d,multiple:e},params:f})}controller(a,b,c=null,d){if(!a||!b)throw Error(`Provide both 'entity' and 'controller'.`);return this.driver({url:`${a}/${b}`,method:null===c?"get":"post",data:c,params:d})}pull(a,b,c,d,e={}){if(!a||!b||!c||!d)throw Error(`Provide all 'entity', 'id', 'fieldPath' and 'pull'.`);return this.driver({url:`${a}/${b}/${c}`,method:"delete",params:Object.assign({},e,{pull:d})})}static instance(){return v?v:(v=new y,v)}}const z=y.instance.bind(y);return a.ApiError=s,a.PleasureClient=y,a.apiDriver=u,a.config=t,a.defaultConfig=q,a.getDriver=r,a.instance=z,a}({},pick,merge,axios,qs,get,castArray,kebabCase,forEach,mapValues,objectHash,Promise,jwtDecode,events,io,url);
